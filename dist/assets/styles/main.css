:root {
  background-color: #ffffff;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font-family: "Open Sans", "Helvetica", sans-serif;
  font-size: 14px;
  text-rendering: optimizeLegibility;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
  color: inherit;
  font: inherit;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit; }

h1 {
  font-size: 2em; }

h2 {
  font-size: 1.5em; }

h3 {
  font-size: 1.17em; }

h4 {
  font-size: 1.12em; }

h5 {
  font-size: 0.83em; }

h6 {
  font-size: 0.75em; }

a {
  cursor: pointer;
  text-decoration: none; }

a:active,
a:hover {
  outline: 0; }

pre {
  overflow: auto; }

img {
  border: 0; }

ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  overflow: auto;
  resize: vertical; }

body,
html {
  background: #1d1e26;
  color: #9ca0b4;
  min-height: 100vh;
  font-weight: 600; }

body {
  display: flex;
  justify-content: space-around;
  padding: 0;
  min-width: 600px; }

.app {
  display: flex;
  width: 100%; }

.component-app {
  display: flex;
  width: 100%; }

.component-sidebar {
  flex-shrink: 0;
  flex-basis: 300px;
  max-width: 300px;
  background: #16171d;
  height: 100vh;
  border-right: 1px solid #111217; }

.component-content {
  position: relative;
  flex-grow: 1;
  overflow: scroll;
  height: 100vh; }

.component-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  padding: 5px 20px;
  background-color: #16171d;
  width: 100%;
  z-index: 99999;
  font-size: 13px;
  font-weight: 600;
  border-top: 1px solid #111217; }

.component-tabs {
  display: flex;
  justify-content: flex-start;
  width: 100%; }
  .component-tabs .tabs {
    display: flex;
    justify-content: flex-start;
    width: 100%;
    padding-top: 5px;
    background: #16171d; }
    .component-tabs .tabs .tab {
      padding: 7px 10px;
      font-size: 12px;
      cursor: pointer; }
      .component-tabs .tabs .tab.active {
        background: #1d1e26;
        border-radius: 2px 2px 0 0;
        border-left: 2px solid #01d689;
        color: white;
        box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.06); }

.bar {
  display: flex;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  padding: 20px 0;
  z-index: 99999;
  padding: 10px; }
  .bar .columm {
    padding: 0 10px; }
    .bar .columm.action {
      width: 150px; }
    .bar .columm.url {
      flex-grow: 1; }
    .bar .columm.button {
      width: 150px; }
  .bar input {
    background: none;
    border: 1px solid #475271;
    transition: all 0.25s;
    outline: none;
    padding: 7px;
    width: 100%;
    border-radius: 2px;
    font-weight: 600;
    letter-spacing: 0.05em;
    font-size: 13px; }
    .bar input:focus {
      border-color: #01d689; }
    .bar input[type="button"] {
      border: 2px solid #01d689;
      background: #01d689;
      color: white;
      border: none;
      font-weight: 600; }
      .bar input[type="button"]:active {
        opacity: 0.9; }

.result {
  margin-top: 20px;
  padding: 20px;
  word-break: break-all; }
  .result #json-renderer {
    font-size: 13px;
    font-weight: 600;
    line-height: 17px; }
    .result #json-renderer ol.json-array,
    .result #json-renderer ul.json-dict {
      border-color: #32343d; }
    .result #json-renderer .json-string {
      color: #338962; }
    .result #json-renderer .json-literal {
      color: #666977; }

.folder-list {
  display: block;
  color: #b1b4c4; }
  .folder-list .item {
    border-bottom: 2px solid #111217;
    border-left: 2px solid #338962;
    padding: 10px; }
    .folder-list .item.active {
      border-left: 2px solid #43d08a; }
  .folder-list .name {
    font-size: 13px;
    font-weight: 600; }
  .folder-list .description {
    font-size: 11px;
    opacity: 0.7; }

/*# sourceMappingURL=data:application/json;base64, */
