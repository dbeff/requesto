:root {
  background-color: #ffffff;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font-family: "Open Sans", "Helvetica", sans-serif;
  font-size: 14px;
  text-rendering: optimizeLegibility;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
  color: inherit;
  font: inherit;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit; }

h1 {
  font-size: 2em; }

h2 {
  font-size: 1.5em; }

h3 {
  font-size: 1.17em; }

h4 {
  font-size: 1.12em; }

h5 {
  font-size: 0.83em; }

h6 {
  font-size: 0.75em; }

a {
  cursor: pointer;
  text-decoration: none; }

a:active,
a:hover {
  outline: 0; }

pre {
  overflow: auto; }

img {
  border: 0; }

ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  overflow: auto;
  resize: vertical; }

html, body {
  background: #262730;
  color: #9ca0b4;
  min-height: 100vh; }

body {
  padding: 60px 0; }

.bar {
  width: 100%;
  background-color: #16171d;
  padding: 20px 0;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99999; }
  .bar:after {
    content: "";
    display: table;
    clear: both; }
  .bar .columm.action {
    width: 25%;
    box-sizing: border-box;
    float: left;
    padding-left: 20px;
    padding-right: 20px; }
    .bar .columm.action:after {
      content: "";
      display: table;
      clear: both; }
  .bar .columm.url {
    width: 50%;
    box-sizing: border-box;
    float: left;
    padding-left: 20px;
    padding-right: 20px; }
    .bar .columm.url:after {
      content: "";
      display: table;
      clear: both; }
  .bar .columm.button {
    width: 25%;
    box-sizing: border-box;
    float: left;
    padding-left: 20px;
    padding-right: 20px; }
    .bar .columm.button:after {
      content: "";
      display: table;
      clear: both; }
  .bar input {
    background: none;
    border: 2px solid #475271;
    transition: all 0.25s;
    outline: none;
    padding: 10px;
    width: 100%;
    border-radius: 3px;
    font-weight: 600;
    letter-spacing: 0.05em;
    font-size: 13px; }
    .bar input:focus {
      border-color: #01d689; }
    .bar input[type="button"] {
      border: 2px solid #01d689;
      background: #01d689;
      color: white;
      border: none;
      font-weight: 600; }
      .bar input[type="button"]:active {
        opacity: 0.9; }

.result {
  margin-top: 20px;
  padding: 20px;
  word-break: break-all; }
  .result #json-renderer {
    font-size: 13px;
    font-weight: 600;
    line-height: 17px; }
    .result #json-renderer ul.json-dict, .result #json-renderer ol.json-array {
      border-color: #32343d; }
    .result #json-renderer .json-string {
      color: #338962; }
    .result #json-renderer .json-literal {
      color: #666977; }

.footer {
  position: fixed;
  bottom: 0;
  left: 0;
  padding: 20px;
  background-color: #16171d;
  width: 100%;
  z-index: 99999;
  font-size: 13px;
  font-weight: 600; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mcm9udGVuZGxlci1zYXNzL2NvcmUvX3Jlc2V0LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZnJvbnRlbmRsZXItc2Fzcy9jb3JlL19zZXR0aW5ncy5zY3NzIiwibWFpbi5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Zyb250ZW5kbGVyLXNhc3MvY29yZS9fdXRpbHMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mcm9udGVuZGxlci1zYXNzL2NvcmUvX2dyaWQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLSTtFQUNJLDBCQUEwQjtFQUM3Qix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixrRENQNkM7RURRMUMsZ0JDUFE7RURRWCxtQ0FBbUM7RUFDaEMsdUJBQXVCO0VBQ3ZCLG9DQUFvQztFQUNwQyxtQ0FBbUMsRUFDdEM7O0FBRUQ7OztFQUdJLG9CQUFvQjtFQUNwQixVQUFVO0VBQ1YsV0FBVztFQUNYLGVBQWU7RUFDZixjQUFjO0VBQ2QsZ0NBQWdDO0VBQ2hDLGlDQUFpQyxFQUNwQzs7QUFNRDtFQUNJLGVBQWUsRUFDbEI7O0FBQ0Q7RUFDSSxpQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxrQkFBa0IsRUFDckI7O0FBQ0Q7RUFDSSxrQkFBa0IsRUFDckI7O0FBQ0Q7RUFDSSxrQkFBa0IsRUFDckI7O0FBQ0Q7RUFDSSxrQkFBa0IsRUFDckI7O0FBQ0Q7RUFDSSxnQkFBZ0I7RUFDaEIsc0JBQXNCLEVBQ3pCOztBQUNEOztFQUVJLFdBQVcsRUFDZDs7QUFDRDtFQUNJLGVBQWUsRUFDbEI7O0FBS0Q7RUFDSSxVQUFVLEVBQ2I7O0FBS0Q7RUFDSSxpQkFBaUIsRUFDcEI7O0FBS0Q7RUFDSSwwQkFBMEI7RUFDMUIsa0JBQWtCLEVBQ3JCOztBQUtEO0VBQ0ksZUFBZTtFQUNmLGlCQUFpQixFQUNwQjs7QUVwRkw7RUFDSSxvQkFBb0I7RUFDcEIsZUFBYztFQUNkLGtCQUFrQixFQUNyQjs7QUFFRDtFQUNJLGdCQUFnQixFQUNuQjs7QUFFRDtFQUVJLFlBQVk7RUFDWiwwQkFBMEI7RUFDMUIsZ0JBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixPQUFNO0VBQ04sUUFBUTtFQUNSLGVBQWUsRUE2Q2xCO0VBckREO0lDaEJRLFlBQVk7SUFDWixlQUFlO0lBQ2YsWUFBWSxFQUNmO0VEYUw7SUVGQyxXQURZO0lBRVosdUJBQXNCO0lBR3JCLFlBQVk7SUFLWixtQkFBcUI7SUFDckIsb0JBQXNCLEVGS2Y7SUFiVDtNQ2hCUSxZQUFZO01BQ1osZUFBZTtNQUNmLFlBQVksRUFDZjtFRGFMO0lFRkMsV0FEWTtJQUVaLHVCQUFzQjtJQUdyQixZQUFZO0lBS1osbUJBQXFCO0lBQ3JCLG9CQUFzQixFRlNmO0lBakJUO01DaEJRLFlBQVk7TUFDWixlQUFlO01BQ2YsWUFBWSxFQUNmO0VEYUw7SUVGQyxXQURZO0lBRVosdUJBQXNCO0lBR3JCLFlBQVk7SUFLWixtQkFBcUI7SUFDckIsb0JBQXNCLEVGYWY7SUFyQlQ7TUNoQlEsWUFBWTtNQUNaLGVBQWU7TUFDZixZQUFZLEVBQ2Y7RURhTDtJQXlCUSxpQkFBaUI7SUFDakIsMEJBQTBCO0lBQzFCLHNCRHBDa0I7SUNxQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsdUJBQXVCO0lBQ3ZCLGdCQUFlLEVBaUJsQjtJQW5ETDtNQW9DWSxzQkFBcUIsRUFDeEI7SUFyQ1Q7TUF5Q1ksMEJBQTBCO01BQzFCLG9CQUFvQjtNQUNwQixhQUFZO01BQ1osYUFBWTtNQUNaLGlCQUFpQixFQUtwQjtNQWxEVDtRQWdEZ0IsYUFBYSxFQUNoQjs7QUFNYjtFQUNJLGlCQUFpQjtFQUNqQixjQUFxQjtFQUNyQixzQkFBc0IsRUFrQnpCO0VBckJEO0lBTVEsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0IsRUFXckI7SUFuQkw7TUFXWSxzQkFBc0IsRUFDekI7SUFaVDtNQWNZLGVBQWUsRUFDbEI7SUFmVDtNQWlCWSxlQUFlLEVBQ2xCOztBQU1UO0VBQ0ksZ0JBQWdCO0VBQ2hCLFVBQVM7RUFDVCxRQUFRO0VBQ1IsY0FBcUI7RUFDckIsMEJBQTBCO0VBQzFCLFlBQVk7RUFDWixlQUFlO0VBRWYsZ0JBQWU7RUFDZixpQkFBaUIsRUFDcEIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWl4aW4gcmVzZXQgKCl7XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBHTE9CQUwgKGluaGVyaXRhbmNlKVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICA6cm9vdHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgXHRjb2xvcjogIzAwMDAwMDtcbiAgICBcdGN1cnNvcjogZGVmYXVsdDtcbiAgICBcdGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcbiAgICBcdHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gICAgICAgIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAgIH1cblxuICAgICosXG4gICAgKjpiZWZvcmUsXG4gICAgKjphZnRlciB7XG4gICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQ6IGluaGVyaXQ7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAgIH1cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gVFlQT0dSQVBIWVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc2FtcGxlLmh0bWxcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIH1cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgfVxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjE3ZW07XG4gICAgfVxuICAgIGg0IHtcbiAgICAgICAgZm9udC1zaXplOiAxLjEyZW07XG4gICAgfVxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiAwLjgzZW07XG4gICAgfVxuICAgIGg2IHtcbiAgICAgICAgZm9udC1zaXplOiAwLjc1ZW07XG4gICAgfVxuICAgIGEge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgYTphY3RpdmUsXG4gICAgYTpob3ZlciB7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxuICAgIHByZSB7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gRU1CRURERURcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGltZyB7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIExJU1RTXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB1bCB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBUQUJMRVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgdGFibGUge1xuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgICAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIEZPUk1cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHRleHRhcmVhIHtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICAgIHJlc2l6ZTogdmVydGljYWw7XG4gICAgfVxufVxuIiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9GT05UXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG4kZm9udC1zaXplOiAxNHB4ICFkZWZhdWx0O1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL0FOSU1BVElPTlxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJGFuaW1hdGlvbi1kdXJhdGlvbjogMC4yNXMgIWRlZmF1bHQ7XG4kYW5pbWF0aW9uLXRpbWUtZnVuY3Rpb25zOiAoXG5cdFwiaW4tb3V0LXF1YWRcIjogY3ViaWMtYmV6aWVyKDAuNDU1LCAwLjAzMCwgMC41MTUsIDAuOTU1KSxcblx0XCJpbi1vdXQtY3ViaWNcIjogY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKSxcblx0XCJpbi1vdXQtcXVhcnRcIjogY3ViaWMtYmV6aWVyKDAuNzcwLCAwLjAwMCwgMC4xNzUsIDEuMDAwKSxcblx0XCJpbi1vdXQtcXVpbnRcIjogY3ViaWMtYmV6aWVyKDAuODYwLCAwLjAwMCwgMC4wNzAsIDEuMDAwKSxcblx0XCJpbi1vdXQtc2luZVwiOiBjdWJpYy1iZXppZXIoMC40NDUsIDAuMDUwLCAwLjU1MCwgMC45NTApLFxuXHRcImluLW91dC1leHBvXCI6IGN1YmljLWJlemllcigxLjAwMCwgMC4wMDAsIDAuMDAwLCAxLjAwMCksXG5cdFwiaW4tb3V0LWNpcmNcIjogY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNTAsIDAuODYwKSxcbikgIWRlZmF1bHQ7XG4kYW5pbWF0aW9uLWtleWZyYW1lczooXG5cdFwiZmFkZS1pblwiLFxuXHRcImZhZGUtb3V0XCIsXG5cdFwiYm91bmNlLWluLWRvd25cIixcblx0XCJib3VuY2UtaW4tdXBcIixcblx0XCJydWJiZXItYmFuZFwiLFxuXHRcInpvb20taW5cIixcblx0XCJzbGlkZS1pbi11cFwiLFxuXHRcInNsaWRlLWluLWRvd25cIixcblx0XCJhbGVydFwiXG4pICFkZWZhdWx0O1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL0dSSURcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRncmlkLWd1dHRlcjogNDBweCAhZGVmYXVsdDtcbiRncmlkLWJyZWFrcG9pbnRzOihcblx0XCJ4c21hbGxcIjogMTAwJSBtYXggNjAwcHgsXG5cdFwic21hbGxcIjogIDEwMCUgbWluIDYwMXB4IG1heCA5NjBweCxcblx0XCJtZWRpdW1cIjogMTAwJSBtaW4gOTYxcHggbWF4IDEyODBweCxcblx0XCJsYXJnZVwiOiAgMTI4MHB4IG1pbiAxMjgxcHggbWF4IDE2MDBweCxcbiAgICBcInhsYXJnZVwiOiAxNjAwcHggbWluIDE2MDFweFxuKSFkZWZhdWx0O1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL0NPTE9SXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kY29sb3JzOihcblx0XCJvY2VhblwiOiAgICMwMGE3Y2EsXG5cdFwiYmx1ZVwiOiAgICAjMDA3NWQzLFxuXHRcInB1cnBsZVwiOiAgIzgyNDRhNyxcblx0XCJwaW5rXCI6ICAgICNkZDMxOGEsXG5cdFwiZ3JlZW5cIjogICAjNzFiZTQ4LFxuXHRcInllbGxvd1wiOiAgI2Y1OWQzNyxcblx0XCJvcmFuZ2VcIjogICNmNzU5MjUsXG5cdFwicmVkXCI6ICAgICAjZGQyMDJiLFxuXHRcImRhcmtcIjogICAgIzFjMjczMSxcblx0XCJncmF5XCI6ICAgICM2MDZjNzgsXG5cdFwic2lsdmVyXCI6ICAjOTM5ZmFjXG4pICFkZWZhdWx0O1xuIiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEZST05URU5ETEVSXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGltcG9ydCBcImZyb250ZW5kbGVyXCI7XG5cbkBpbmNsdWRlIHJlc2V0KCk7XG5cblxuaHRtbCxib2R5e1xuICAgIGJhY2tncm91bmQ6ICMyNjI3MzA7XG4gICAgY29sb3I6IzljYTBiNDtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbn1cblxuYm9keXtcbiAgICBwYWRkaW5nOiA2MHB4IDA7XG59XG5cbi5iYXJ7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNzFkO1xuICAgIHBhZGRpbmc6ICRncmlkLWd1dHRlci8yIDA7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDowO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogOTk5OTk7XG5cbiAgICAuY29sdW1te1xuICAgICAgICAmLmFjdGlvbntcbiAgICAgICAgICAgIEBpbmNsdWRlIGdyaWQtY29sdW1uKDMsMTIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi51cmx7XG4gICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbHVtbig2LDEyKTtcbiAgICAgICAgfVxuXG4gICAgICAgICYuYnV0dG9ue1xuICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4oMywxMik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbnB1dHtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgIzQ3NTI3MTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsICRhbmltYXRpb24tZHVyYXRpb247XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gICAgICAgIGZvbnQtc2l6ZToxM3B4O1xuICAgICAgICAmOmZvY3Vze1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiMwMWQ2ODk7XG4gICAgICAgIH1cblxuXG4gICAgICAgICZbdHlwZT1cImJ1dHRvblwiXXtcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMWQ2ODk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDFkNjg5O1xuICAgICAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgICAgICAgICAgICY6YWN0aXZle1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuOTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufVxuXG4ucmVzdWx0e1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgcGFkZGluZzogJGdyaWQtZ3V0dGVyLzI7XG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xuXG4gICAgI2pzb24tcmVuZGVyZXJ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE3cHg7XG5cbiAgICAgICAgdWwuanNvbi1kaWN0LCBvbC5qc29uLWFycmF5e1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzIzNDNkO1xuICAgICAgICB9XG4gICAgICAgIC5qc29uLXN0cmluZyB7XG4gICAgICAgICAgICBjb2xvcjogIzMzODk2MjtcbiAgICAgICAgfVxuICAgICAgICAuanNvbi1saXRlcmFse1xuICAgICAgICAgICAgY29sb3I6ICM2NjY5Nzc7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuXG4uZm9vdGVye1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206MDtcbiAgICBsZWZ0OiAwO1xuICAgIHBhZGRpbmc6ICRncmlkLWd1dHRlci8yO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNjE3MWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogOTk5OTk7XG4gICAgLy8gbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICBmb250LXNpemU6MTNweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuIiwiQG1peGluIGNsZWFyZml4IHtcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn1cbiVjbGVhcmZpeCB7XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG5AbWl4aW4gYm94LXNoYWRvdyAoJGxldmVsKSB7XG4gICAgQGlmICgkbGV2ZWwgPT0gMSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLDAsMCwwLjEyKSwgMCAxcHggMnB4IHJnYmEoMCwwLDAsMC4yNCk7XG4gICAgfVxuICAgIEBlbHNlaWYgKCRsZXZlbCA9PSAyKSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsMCwwLDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLDAsMCwwLjIzKTtcbiAgICB9XG4gICAgQGVsc2VpZiAoJGxldmVsID09IDMpIHtcbiAgICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLDAsMCwwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwwLDAsMC4yMyk7XG4gICAgfVxuICAgIEBlbHNlaWYgKCRsZXZlbCA9PSA0KSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwwLDAsMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwwLDAsMC4yMik7XG4gICAgfVxuICAgIEBlbHNlaWYgKCRsZXZlbCA9PSA1KSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMTlweCAzOHB4IHJnYmEoMCwwLDAsMC4zMCksIDAgMTVweCAxMnB4IHJnYmEoMCwwLDAsMC4yMik7XG4gICAgfVxufVxuIiwiQG1peGluIGdyaWQtcm93KCkge1xuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xuXHRtYXJnaW46IDAgYXV0bztcblx0ZGlzcGxheTogYmxvY2s7XG5cblx0Ly9sb29waW5nIHBhcmEgaW5jbHVpciBicmVha3BvaW50c1xuXHRAZWFjaCAkYnJlYWsgaW4gbWFwLWtleXMoJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0XHRAaW5jbHVkZSBncmlkLWJyZWFrcG9pbnQoJGJyZWFrKSB7XG5cdFx0XHR3aWR0aDogbnRoKG1hcC1nZXQoJGdyaWQtYnJlYWtwb2ludHMsJGJyZWFrKSwgMSk7XG5cdFx0fVxuXHR9XG59XG5cbkBtaXhpbiBncmlkLWNvbHVtbigkY29sdW1uLCAkY29sdW1uczogMTIsICRndXR0ZXI6ICRncmlkLWd1dHRlcikge1xuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xuXHQkd2lkdGg6IDEwMCUgKiAkY29sdW1uIC8gJGNvbHVtbnM7XG5cdHdpZHRoOiAkd2lkdGg7XG5cdGJveC1zaXppbmc6Ym9yZGVyLWJveDtcblxuXHRAaWYgJHdpZHRoICE9IDEwMCUge1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHR9XG5cblx0Ly9pbmNsdWRlIGd1dHRlclxuXHRAaWYgJGd1dHRlciAhPSBmYWxzZSB7XG5cdFx0cGFkZGluZy1sZWZ0OiAkZ3V0dGVyIC8gMjtcblx0XHRwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyIC8gMjtcblx0fVxufVxuXG5AbWl4aW4gZ3JpZC1icmVha3BvaW50KCRicmVha3BvaW50cy4uLikge1xuXHRAaWYgKCRncmlkLWJyZWFrcG9pbnRzICE9IGZhbHNlKSB7XG5cdFx0QGVhY2ggJGJyZWFrcG9pbnQgaW4gJGJyZWFrcG9pbnRzIHtcblx0XHRcdEBpZiAobWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywkYnJlYWtwb2ludCkgIT0gbnVsbCkge1xuXHRcdFx0XHQkYnJlYWs6bWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywkYnJlYWtwb2ludCk7XG5cdFx0XHRcdEBpZiAobGVuZ3RoKCRicmVhaykgPiAzKSB7XG5cdFx0XHRcdFx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoI3tudGgoJGJyZWFrLCAyKX0td2lkdGg6IG50aCgkYnJlYWssIDMpKSBhbmQgKCN7bnRoKCRicmVhaywgNCl9LXdpZHRoOiBudGgoJGJyZWFrLCA1KSkge1xuXHRcdFx0XHRcdFx0QGNvbnRlbnQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdEBlbHNle1xuXHRcdFx0XHRcdEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKCN7bnRoKCRicmVhaywgMil9LXdpZHRoOiBudGgoJGJyZWFrLCAzKSkge1xuXHRcdFx0XHRcdFx0QGNvbnRlbnQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRAZWxzZXtcblx0XHRcdFx0QGVycm9yICRicmVha3BvaW50IFwiaXMgbm90IGEgdmFsaWQgZ3JpZCBicmVha3BvaW50XCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbkBtaXhpbiBncmlkLWNvbHVtbi1icmVha3BvaW50KCRicmVha3BvaW50LCAkY29sdW1uLCAkY29sdW1uczogMTIsICRndXR0ZXI6IGZhbHNlKSB7XG5cdEBpbmNsdWRlIGdyaWQtYnJlYWtwb2ludCgkYnJlYWtwb2ludCkge1xuXHRcdCR3aWR0aDogMTAwJSAqICRjb2x1bW4gLyAkY29sdW1ucztcblx0XHR3aWR0aDogJHdpZHRoO1xuXHRcdGJveC1zaXppbmc6Ym9yZGVyLWJveDtcblxuXHRcdEBpZiAkd2lkdGggIT0gMTAwJSB7XG5cdFx0XHRmbG9hdDogbGVmdDtcblx0XHR9XG5cblx0XHQvL2luY2x1ZGUgZ3V0dGVyXG5cdFx0QGlmICRndXR0ZXIgIT0gZmFsc2Uge1xuXHRcdFx0cGFkZGluZy1sZWZ0OiAkZ3V0dGVyIC8gMjtcblx0XHRcdHBhZGRpbmctcmlnaHQ6ICRndXR0ZXIgLyAyO1xuXHRcdH1cblx0XHRAY29udGVudDtcblx0fVxufVxuXG5AbWl4aW4gZ3JpZC1icmVha3BvaW50LWhpZGUoJGJyZWFrcG9pbnRzLi4uKSB7XG5cdEBlYWNoICRicmVha3BvaW50IGluICRicmVha3BvaW50cyB7XG5cdFx0QGluY2x1ZGUgZ3JpZC1icmVha3BvaW50KCRicmVha3BvaW50KSB7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdH1cblx0fVxufVxuXG5AbWl4aW4gZ3JpZC1icmVha3BvaW50LXNob3coJGJyZWFrcG9pbnRzLi4uKSB7XG5cdEBlYWNoICRicmVha3BvaW50IGluICRicmVha3BvaW50cyB7XG5cdFx0QGluY2x1ZGUgZ3JpZC1icmVha3BvaW50KCRicmVha3BvaW50KSB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR9XG5cdH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
